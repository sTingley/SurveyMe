{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bosma\\\\Documents\\\\GitHub\\\\SurveyMe\\\\frontend\\\\src\\\\components\\\\ViewSurvey.js\";\nimport React from \"react\";\nimport MultipleChoice from './questions/MultipleChoice.js';\nimport ShortAnswer from './questions/ShortAnswer.js';\nimport MultiSelect from './questions/MultiSelect.js';\nimport Typography from '@material-ui/core/Typography'; //props contains survey_id which will be used to query mongo client\n\nexport default function ViewSurvey(props) {\n  const qobj = {\n    id: 1,\n    type: 0,\n    category: \"agile\",\n    content: \"Are you agile?\",\n    response: \"No\"\n  };\n  const qobj2 = {\n    id: 2,\n    type: 1,\n    category: 'agile',\n    content: 'Who is agile?',\n    response: [\"me\", \"you\", \"everyone\", \"noone\"],\n    selected: [\"me\"]\n  };\n  const qobj3 = {\n    id: 3,\n    type: 2,\n    category: 'agile',\n    content: \"Who is agile?\",\n    response: [\"me\", \"you\", \"him\", \"her\"],\n    selected: [\"me\", \"you\"]\n  };\n  const surveyobj = {\n    id: 1,\n    title: \"agile survey\",\n    category: 'agile',\n    questions: [qobj, qobj2, qobj3],\n    dateCreated: \"1/1/2020\",\n    public: true\n  };\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h4\",\n    component: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, `Survey Title: ${surveyobj.title}  ID: ${surveyobj.id}`), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, returnQs(surveyobj.questions)));\n}\n\nfunction returnQs(qs) {\n  return qs.map(q => returnQ(q));\n}\n\nfunction returnQ(q) {\n  switch (q.type) {\n    case 0:\n      return React.createElement(ShortAnswer, {\n        question_id: q.id,\n        question_content: q.content,\n        question_response: q.response,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      });\n      break;\n\n    case 1:\n      return React.createElement(MultipleChoice, {\n        question_id: q.id,\n        question_content: q.content,\n        question_response: q.response,\n        question_selection: q.selected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      });\n\n    case 2:\n      return React.createElement(MultiSelect, {\n        question_id: q.id,\n        question_content: q.content,\n        question_response: q.response,\n        question_selection: q.selected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      });\n\n    default:\n  }\n}","map":{"version":3,"sources":["C:/Users/bosma/Documents/GitHub/SurveyMe/frontend/src/components/ViewSurvey.js"],"names":["React","MultipleChoice","ShortAnswer","MultiSelect","Typography","ViewSurvey","props","qobj","id","type","category","content","response","qobj2","selected","qobj3","surveyobj","title","questions","dateCreated","public","returnQs","qs","map","q","returnQ"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB,C,CACA;;AACA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA0B;AAEvC,QAAMC,IAAI,GAAG;AACXC,IAAAA,EAAE,EAAE,CADO;AAEXC,IAAAA,IAAI,EAAE,CAFK;AAGXC,IAAAA,QAAQ,EAAE,OAHC;AAIXC,IAAAA,OAAO,EAAE,gBAJE;AAKXC,IAAAA,QAAQ,EAAE;AALC,GAAb;AAOA,QAAMC,KAAK,GAAG;AACZL,IAAAA,EAAE,EAAC,CADS;AAEZC,IAAAA,IAAI,EAAE,CAFM;AAGZC,IAAAA,QAAQ,EAAE,OAHE;AAIZC,IAAAA,OAAO,EAAE,eAJG;AAKZC,IAAAA,QAAQ,EAAE,CAAC,IAAD,EAAM,KAAN,EAAY,UAAZ,EAAuB,OAAvB,CALE;AAMZE,IAAAA,QAAQ,EAAE,CAAC,IAAD;AANE,GAAd;AAQA,QAAMC,KAAK,GAAG;AACZP,IAAAA,EAAE,EAAC,CADS;AAEZC,IAAAA,IAAI,EAAE,CAFM;AAGZC,IAAAA,QAAQ,EAAE,OAHE;AAIZC,IAAAA,OAAO,EAAE,eAJG;AAKZC,IAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,KAAP,EAAc,KAAd,EAAqB,KAArB,CALE;AAMZE,IAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,KAAP;AANE,GAAd;AAQA,QAAME,SAAS,GAAG;AAChBR,IAAAA,EAAE,EAAE,CADY;AAEhBS,IAAAA,KAAK,EAAE,cAFS;AAGhBP,IAAAA,QAAQ,EAAE,OAHM;AAIhBQ,IAAAA,SAAS,EAAE,CAACX,IAAD,EAAMM,KAAN,EAAYE,KAAZ,CAJK;AAKhBI,IAAAA,WAAW,EAAE,UALG;AAMhBC,IAAAA,MAAM,EAAE;AANQ,GAAlB;AAUA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAwB,IAAA,SAAS,EAAC,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,iBAAgBJ,SAAS,CAACC,KAAM,SAAQD,SAAS,CAACR,EAAG,EADzD,CADF,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKa,QAAQ,CAACL,SAAS,CAACE,SAAX,CAAb,CAJJ,CADF;AAQD;;AAED,SAASG,QAAT,CAAkBC,EAAlB,EAAqB;AACnB,SAAOA,EAAE,CAACC,GAAH,CAAQC,CAAD,IAAOC,OAAO,CAACD,CAAD,CAArB,CAAP;AACD;;AAED,SAASC,OAAT,CAAiBD,CAAjB,EAAmB;AACjB,UAAQA,CAAC,CAACf,IAAV;AACE,SAAK,CAAL;AACE,aACE,oBAAC,WAAD;AACA,QAAA,WAAW,EAAEe,CAAC,CAAChB,EADf;AAEA,QAAA,gBAAgB,EAAEgB,CAAC,CAACb,OAFpB;AAGA,QAAA,iBAAiB,EAAEa,CAAC,CAACZ,QAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAOA;;AACF,SAAK,CAAL;AACE,aACE,oBAAC,cAAD;AACA,QAAA,WAAW,EAAEY,CAAC,CAAChB,EADf;AAEA,QAAA,gBAAgB,EAAEgB,CAAC,CAACb,OAFpB;AAGA,QAAA,iBAAiB,EAAEa,CAAC,CAACZ,QAHrB;AAIA,QAAA,kBAAkB,EAAEY,CAAC,CAACV,QAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;AAQA,SAAK,CAAL;AACA,aACE,oBAAC,WAAD;AACA,QAAA,WAAW,EAAEU,CAAC,CAAChB,EADf;AAEA,QAAA,gBAAgB,EAAEgB,CAAC,CAACb,OAFpB;AAGA,QAAA,iBAAiB,EAAEa,CAAC,CAACZ,QAHrB;AAIA,QAAA,kBAAkB,EAAEY,CAAC,CAACV,QAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;AAQF;AA5BF;AA8BD","sourcesContent":["import React from \"react\";\r\nimport MultipleChoice from './questions/MultipleChoice.js'\r\nimport ShortAnswer from './questions/ShortAnswer.js'\r\nimport MultiSelect from './questions/MultiSelect.js'\r\nimport Typography from '@material-ui/core/Typography'\r\n//props contains survey_id which will be used to query mongo client\r\nexport default function ViewSurvey(props){\r\n  \r\n  const qobj = {\r\n    id: 1,\r\n    type: 0,\r\n    category: \"agile\",\r\n    content: \"Are you agile?\",\r\n    response: \"No\"\r\n  }\r\n  const qobj2 = {\r\n    id:2,\r\n    type: 1,\r\n    category: 'agile',\r\n    content: 'Who is agile?',\r\n    response: [\"me\",\"you\",\"everyone\",\"noone\"],\r\n    selected: [\"me\"]\r\n  }\r\n  const qobj3 = {\r\n    id:3,\r\n    type: 2,\r\n    category: 'agile',\r\n    content: \"Who is agile?\",\r\n    response: [\"me\", \"you\", \"him\", \"her\"],\r\n    selected: [\"me\", \"you\"]\r\n  }\r\n  const surveyobj = {\r\n    id: 1,\r\n    title: \"agile survey\",\r\n    category: 'agile',\r\n    questions: [qobj,qobj2,qobj3],\r\n    dateCreated: \"1/1/2020\",\r\n    public: true\r\n  }\r\n\r\n\r\n  return(\r\n    <div>\r\n      <Typography variant=\"h4\"component=\"h2\">\r\n        {`Survey Title: ${surveyobj.title}  ID: ${surveyobj.id}`}\r\n      </Typography>\r\n        <ul>{returnQs(surveyobj.questions)}</ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction returnQs(qs){\r\n  return qs.map((q) => returnQ(q))\r\n}\r\n\r\nfunction returnQ(q){\r\n  switch (q.type) {\r\n    case 0:\r\n      return(\r\n        <ShortAnswer\r\n        question_id={q.id}\r\n        question_content={q.content}\r\n        question_response={q.response}\r\n        />\r\n      )\r\n      break;\r\n    case 1:\r\n      return(\r\n        <MultipleChoice\r\n        question_id={q.id}\r\n        question_content={q.content}\r\n        question_response={q.response}\r\n        question_selection={q.selected}\r\n        />\r\n      )\r\n      case 2:\r\n      return(\r\n        <MultiSelect\r\n        question_id={q.id}\r\n        question_content={q.content}\r\n        question_response={q.response}\r\n        question_selection={q.selected}\r\n        />\r\n      )\r\n    default:\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}